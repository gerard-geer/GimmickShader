// ShaderTracker: Ridiculous shader summation sound engine
// Engine / Function Builder by Michael Moffitt (https://github.com/mikejmoffitt)
// Sound Generation Functions by Gerard Geer (https://github.com/gerard-geer)
// Waveform definitions

float saw(float t, float f, float a)
{
	return ((mod(t*0.5*f*0.31830989, 1.0)*2.0)-1.0)*a;
}

float sqr(float t, float f, float duty, float a)
{
	return step(duty, abs(saw(t,f * 0.5,1.0)))*a;
}

float tri(float t, float f, float a)
{
	return (((floor(abs(saw(t,f * 0.5,a))*16.0)*0.0625)*2.0)-1.0)*a;
}

float sine(float t, float f, float a)
{
	return sin(t*f)*a;
}

float noise(float t, float f, float a)
{
	return ((fract(sin(dot(vec2(t,f),vec2(12.9898,78.233)))*43758.5453)*2.0)-1.0)*a;
}

float l_decay(float t, float s, float l)
{
	return clamp(1.0-((t-s)/l), 0.0, 1.0);
}

	float t1 = mod(t0,1.500000);
float line_a(float t1)
{
	float result = 0.0;
	result += ( (t1>=0.000000) ? ( (t1<0.500000) ? (l_decay(t1, 0.000000, 0.750000) * (sqr(t1, 821.921082, 0.500000, 0.150000))) : 0.0) : 0.0);
	result += ( (t1>=0.500000) ? ( (t1<1.000000) ? (l_decay(t1, 0.500000, 0.750000) * (sqr(t1, 870.794189, 0.500000, 0.150000))) : 0.0) : 0.0);
	result += ( (t1>=1.000000) ? ( (t1<1.500000) ? (l_decay(t1, 1.000000, 0.750000) * (sqr(t1, 1035.554443, 0.500000, 0.150000))) : 0.0) : 0.0);
	result += ( (t1>=1.500000) ? ( (t1<2.000000) ? (l_decay(t1, 1.500000, 0.750000) * (sqr(t1, 1097.132080, 0.500000, 0.150000))) : 0.0) : 0.0);
	result += ( (t1>=2.000000) ? ( (t1<2.500000) ? (l_decay(t1, 2.000000, 0.750000) * (sqr(t1, 1231.489258, 0.500000, 0.150000))) : 0.0) : 0.0);
	result += ( (t1>=2.500000) ? ( (t1<3.000000) ? (l_decay(t1, 2.500000, 0.750000) * (sqr(t1, 1304.718506, 0.500000, 0.150000))) : 0.0) : 0.0);

	return result;
}

	float t2 = mod(t0,1.800000);
float line_b(float t2)
{
	float result = 0.0;
	result += ( (t2>=0.000000) ? ( (t2<0.450000) ? (l_decay(t2, 0.000000, 0.300000) * (saw(t2, 12412.638672, 0.150000))) : 0.0) : 0.0);
	result += ( (t2>=0.450000) ? ( (t2<0.900000) ? (l_decay(t2, 0.450000, 0.300000) * (saw(t2, 9851.914062, 0.150000))) : 0.0) : 0.0);
	result += ( (t2>=0.900000) ? ( (t2<1.350000) ? (l_decay(t2, 0.900000, 0.300000) * (saw(t2, 8777.056641, 0.150000))) : 0.0) : 0.0);
	result += ( (t2>=1.350000) ? ( (t2<1.800000) ? (l_decay(t2, 1.350000, 0.300000) * (saw(t2, 8284.435547, 0.150000))) : 0.0) : 0.0);
	result += ( (t2>=1.800000) ? ( (t2<2.250000) ? (l_decay(t2, 1.800000, 0.300000) * (saw(t2, 8777.056641, 0.150000))) : 0.0) : 0.0);
	result += ( (t2>=2.250000) ? ( (t2<2.700000) ? (l_decay(t2, 2.250000, 0.300000) * (saw(t2, 9851.914062, 0.150000))) : 0.0) : 0.0);
	result += ( (t2>=2.700000) ? ( (t2<3.150000) ? (l_decay(t2, 2.700000, 0.300000) * (saw(t2, 12412.638672, 0.150000))) : 0.0) : 0.0);
	result += ( (t2>=3.150000) ? ( (t2<3.600000) ? (l_decay(t2, 3.150000, 0.300000) * (saw(t2, 8777.056641, 0.150000))) : 0.0) : 0.0);

	return result;
}

	float t3 = mod(t0,64.000000);
vec2 mainSound(float t0)
{
	float result = 0.0;
	result += line_a(t3);
	result += line_b(t3);

	return vec2(result);
}

